{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","itemWidth","frameSize","step","animationDuration","infinite","useState","slide","setSlide","newImages","map","image","index","imageId","imageUrl","lastSlide","length","isPrevDisabled","isNextDisabled","className","style","width","transition","transform","src","alt","String","type","onClick","prevState","disabled","info","App","setItemWidth","setFrameSize","setStep","setAnimationDuration","setInfinite","method","htmlFor","id","name","min","max","value","onChange","event","target","checked","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c482c241.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  itemWidth: number,\n  frameSize: number,\n  step: number,\n  animationDuration: number,\n  infinite: boolean,\n};\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  itemWidth,\n  frameSize,\n  step,\n  animationDuration,\n  infinite,\n}) => {\n  const [slide, setSlide] = useState(0);\n\n  const newImages = images.map((image, index) => ({\n    imageId: index + 1,\n    imageUrl: image,\n  }));\n\n  const lastSlide = newImages.length - frameSize;\n\n  const slidePrev = () => {\n    if (slide - step > 0) {\n      setSlide(prevState => prevState - step);\n    } else {\n      setSlide(0);\n    }\n\n    if (infinite && !slide) {\n      setSlide(lastSlide);\n    }\n  };\n\n  const slideNext = () => {\n    if (slide + step < lastSlide) {\n      setSlide(prevState => prevState + step);\n    } else {\n      setSlide(lastSlide);\n    }\n\n    if (infinite && slide === lastSlide) {\n      setSlide(0);\n    }\n  };\n\n  const isPrevDisabled = !slide && !infinite;\n  const isNextDisabled = slide === lastSlide && !infinite;\n\n  return (\n    <div\n      className=\"Carousel\"\n      style={{\n        width: `${itemWidth * frameSize}px`,\n        transition: `${animationDuration}ms`,\n      }}\n    >\n      <ul\n        className=\"Carousel__list\"\n      >\n        {newImages.map(({ imageId, imageUrl }) => (\n          <li\n            key={imageId}\n            style={{\n              transform: `translateX(${-slide * itemWidth}px)`,\n              transition: `${animationDuration}ms`,\n            }}\n          >\n            <img\n              src={imageUrl}\n              alt={String(imageId)}\n              width={itemWidth}\n              style={{\n                transition: `${animationDuration}ms`,\n              }}\n            />\n          </li>\n        ))}\n      </ul>\n\n      <div className=\"Carousel__buttons\">\n        <button\n          type=\"button\"\n          onClick={slidePrev}\n          disabled={isPrevDisabled}\n        >\n          Prev\n        </button>\n        <button\n          data-cy=\"next\"\n          type=\"button\"\n          onClick={slideNext}\n          disabled={isNextDisabled}\n        >\n          Next\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React, { useState } from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\nconst images = [\n  './img/1.png',\n  './img/2.png',\n  './img/3.png',\n  './img/4.png',\n  './img/5.png',\n  './img/6.png',\n  './img/7.png',\n  './img/8.png',\n  './img/9.png',\n  './img/10.png',\n];\n\nconst info = {\n  minWidth: 130,\n  maxWidth: 1300,\n  widthStep: 10,\n  minFrameSize: 1,\n  maxFrameSize: 10,\n  minStep: 1,\n  maxStep: 5,\n  animationDurationStep: 10,\n};\n\nconst App: React.FC = () => {\n  const [itemWidth, setItemWidth] = useState(130);\n  const [frameSize, setFrameSize] = useState(3);\n  const [step, setStep] = useState(3);\n  const [animationDuration, setAnimationDuration] = useState(1000);\n  const [infinite, setInfinite] = useState(false);\n\n  return (\n    <div className=\"App\">\n      <h1 data-cy=\"title\">\n        {`Carousel with ${images.length} images`}\n      </h1>\n\n      <form method=\"post\" className=\"App__form\">\n        <label htmlFor=\"itemId\">\n          ITEM WIDTH:\n          <input\n            id=\"itemId\"\n            type=\"number\"\n            name=\"itemWidth\"\n            min={info.minWidth}\n            max={info.maxWidth}\n            step={info.widthStep}\n            value={itemWidth}\n            onChange={event => setItemWidth(+event.target.value)}\n          />\n        </label>\n\n        <label htmlFor=\"frameId\">\n          FRAME SIZE:\n          <input\n            id=\"frameId\"\n            type=\"number\"\n            name=\"frameSize\"\n            min={info.minFrameSize}\n            max={info.maxFrameSize}\n            step={info.minStep}\n            value={frameSize}\n            onChange={event => setFrameSize(+event.target.value)}\n          />\n        </label>\n\n        <label htmlFor=\"stepId\">\n          STEP:\n          <input\n            id=\"stepId\"\n            type=\"number\"\n            name=\"step\"\n            min={info.minStep}\n            max={info.maxStep}\n            step={info.minStep}\n            value={step}\n            onChange={event => setStep(+event.target.value)}\n          />\n        </label>\n\n        <label htmlFor=\"animationDurationId\">\n          ANIMATION DURATION:\n          <input\n            id=\"animationDurationId\"\n            type=\"number\"\n            name=\"animationDuration\"\n            step={info.animationDurationStep}\n            value={animationDuration}\n            onChange={event => setAnimationDuration(+event.target.value)}\n          />\n        </label>\n\n        <label htmlFor=\"infiniteId\">\n          INFINITE:\n          <input\n            id=\"infiniteId\"\n            type=\"checkbox\"\n            name=\"infinite\"\n            checked={infinite}\n            onChange={event => setInfinite(event.target.checked)}\n          />\n        </label>\n      </form>\n\n      <Carousel\n        images={images}\n        itemWidth={itemWidth}\n        frameSize={frameSize}\n        step={step}\n        animationDuration={animationDuration}\n        infinite={infinite}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}